#!/usr/bin/env python3
##
## EPITECH PROJECT, 2018
## 104_intersection
## File description:
## math
##

import sys
import math

def check_for_err():
    halp = open("help", "r")

    if len(sys.argv) > 1 and sys.argv[1] == "-h":
        print(halp.read())
        sys.exit(0)
    elif len(sys.argv) < 9:
        print("Too few arguments. Try -h for more informations.")
        sys.exit(84)
    elif len(sys.argv) > 9:
        print("Too much arguments. Try -h for more informations.")
        sys.exit(84)

    i = 1
    while i < 9:
        try:
            flag = int(sys.argv[i])
        except ValueError:
            print("Flag error. Try -h for more informations.")
            sys.exit(84)
        i += 1

    flag = int(sys.argv[1])
    if flag != 1 and flag != 2 and flag != 3:
        print("Flag error. Try -h for more informations.")
        sys.exit(84)

def sphere():
    print('sphere')
    return(0)

def cylinder():
    print('cylinder')
    return(0)

def cone():
    print('cone')
    return(0)

check_for_err()
if int(sys.argv[1]) == 1:
    sphere()
elif int(sys.argv[1]) == 2:
    cylinder()
elif int(sys.argv[1]) == 3:
    cone()

print('fin')
